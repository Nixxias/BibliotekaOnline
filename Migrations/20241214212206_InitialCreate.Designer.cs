// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TEST.Context;

#nullable disable

namespace TEST.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241214212206_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TEST.Models.Autor", b =>
                {
                    b.Property<int>("IdAutora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAutora"));

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdAutora");

                    b.ToTable("autor");
                });

            modelBuilder.Entity("TEST.Models.Czytelnicy", b =>
                {
                    b.Property<int>("IdKlienta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdKlienta"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NrTel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumerPocztowy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdKlienta");

                    b.ToTable("czytelnicy");
                });

            modelBuilder.Entity("TEST.Models.Gatunek", b =>
                {
                    b.Property<int>("IdGatunku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdGatunku"));

                    b.Property<string>("NazwaGatunku")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdGatunku");

                    b.ToTable("gatunek");
                });

            modelBuilder.Entity("TEST.Models.Kopie", b =>
                {
                    b.Property<int>("IdKopii")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdKopii"));

                    b.Property<char>("CzyDostepna")
                        .HasColumnType("character(1)");

                    b.Property<int>("IdKsiazki")
                        .HasColumnType("integer");

                    b.HasKey("IdKopii");

                    b.ToTable("kopie");
                });

            modelBuilder.Entity("TEST.Models.Ksiazka", b =>
                {
                    b.Property<int>("IdKsiazki")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdKsiazki"));

                    b.Property<int>("LiczbaStron")
                        .HasColumnType("integer");

                    b.Property<int>("RokWydania")
                        .HasColumnType("integer");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdKsiazki");

                    b.ToTable("ksiazka");
                });

            modelBuilder.Entity("TEST.Models.Oddzial", b =>
                {
                    b.Property<int>("IdOddzial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdOddzial"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KodPocztowy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdOddzial");

                    b.ToTable("oddzial");
                });

            modelBuilder.Entity("TEST.Models.Pracownicy", b =>
                {
                    b.Property<int>("IdPracownicy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPracownicy"));

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Stanowisko")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdPracownicy");

                    b.ToTable("pracownicy");
                });

            modelBuilder.Entity("TEST.Models.Regal", b =>
                {
                    b.Property<int>("IdRegal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRegal"));

                    b.Property<int>("NrRegalu")
                        .HasColumnType("integer");

                    b.Property<int>("Pietro")
                        .HasColumnType("integer");

                    b.HasKey("IdRegal");

                    b.ToTable("regal");
                });

            modelBuilder.Entity("TEST.Models.Wydawnictwo", b =>
                {
                    b.Property<int>("IdWydawnictwa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdWydawnictwa"));

                    b.Property<DateTime>("DataZalozenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NazwaWydawnictwa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Siedziba")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdWydawnictwa");

                    b.ToTable("wydawnictwo");
                });

            modelBuilder.Entity("TEST.Models.Wypozyczenia", b =>
                {
                    b.Property<int>("IdWypozyczenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdWypozyczenia"));

                    b.Property<DateTime>("DataWypozyczenia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataZwrotu")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdKlienta")
                        .HasColumnType("integer");

                    b.Property<int>("IdKopii")
                        .HasColumnType("integer");

                    b.HasKey("IdWypozyczenia");

                    b.ToTable("wypozyczenia");
                });
#pragma warning restore 612, 618
        }
    }
}
